<?xml version="1.0" encoding="utf-8"?>
<project vert=" varying vec2 texCoord;&#xD; varying vec3 Normal;&#xD; varying vec3 Position;&#xD; &#xD; &#xD;void main(void)&#xD;{&#xD;    gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix*vec4(gl_Vertex.xyz,1.0);&#xD;    Position = (gl_ModelViewMatrix*gl_Vertex).xyz;&#xD;    gl_TexCoord[0] = gl_TextureMatrix[0] * gl_MultiTexCoord0;&#xD;    texCoord = gl_TexCoord[0].xy;&#xD;    Normal = (gl_NormalMatrix *gl_Normal).xyz;&#xD;}" pix="varying vec3 Normal;&#xD;varying vec3 Position;&#xD;vec3 Ia = vec3(0.2,0.2,0.2);&#xD;vec3 Id = vec3(0.7,0.7,0.7);&#xD;vec3 Is = vec3(1.0,1.0,1.0);&#xD;vec3 ma = vec3(1,1,1);&#xD;vec3 md = vec3(1,1,1);&#xD;vec3 ms = vec3(1,1,1);&#xD;float  alpha = 10.0;&#xD;&#xD;uniform vec3 iLightPos; &#xD;uniform vec3 iCamPos; &#xD;&#xD;uniform mat4 iModelViewMatrix;&#xD;  &#xD;void main(void)&#xD;{&#xD;&#x9;&#xD;&#x9;vec3 iLightPos1 = (iModelViewMatrix*vec4(iLightPos,1.0)).xyz;&#xD;&#x9;&#xD;&#x9;gl_FragColor = vec4(0.0,0.0,0.0,1.0);&#xD;&#x9;&#xD;&#x9;vec3 color_amb = Ia*ma;&#xD;&#x9;&#xD;&#x9;vec3 light_vector = normalize(iLightPos1 - Position);&#xD;&#x9;vec3 color_dif = Id*md*dot( light_vector, normalize(Normal)  );&#xD;&#x9;&#xD;&#x9;vec3 iCamPos1 = (iModelViewMatrix*vec4(iCamPos,1.0)).xyz;&#xD;&#x9;vec3 cam_vector = normalize(iCamPos1 - Position);&#xD;&#x9;vec3 col_spec = Is*ms*pow(dot(reflect(light_vector,normalize(Normal)),cam_vector),300);&#xD;&#x9;&#xD;&#xD;&#x9;gl_FragColor = vec4(color_amb + color_dif + col_spec,1.0);&#x9;&#xD;&#xD;}" t0="" t1="" t2="" t3="" />